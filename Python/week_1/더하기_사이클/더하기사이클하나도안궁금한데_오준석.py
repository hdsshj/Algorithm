# 문제
# 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다.
# 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다.
# 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다.
# 다음 예를 보자. 26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
# 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.


# 입력
# 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.

# 출력
# 첫째 줄에 N의 사이클 길이를 출력한다.

# 이건 많이 보고했음

# 숫자를 입력 받음과 동시에 사이클 계산을 위한 변수 temp 에 값을 넣고 cnt 0으로 초기화
# while True 무한 반복
# n1 = 몫 , n2 = 나머지 저장
# 그 다음 temp 에 n1 + n2 를 더한 숫자를 만든다.
# 그런 다음 다시 n1 + n2의 일의자리 수를 만들어 temp 에 넣어준다.
# 이 과정을 반복할때마다 1번씩 카운팅하다가
# input 과 temp 가 같아지는 시점에 반복문을 종료하고 카운팅한 숫자를 출력


num = temp = 55

cnt = 0

while True:
    n1 = temp // 10
    n2 = temp % 10
    sum_num = n1 + n2

    temp = int(str(n2) + str(sum_num % 10))

    cnt += 1

    if num == temp:
        break

print(cnt)
