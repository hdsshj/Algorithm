{
    "sourceFile": "Lecture/wooseokgimozzi/week_1/homework/02_find_count_to_turn_out_to_all_zero_or_ all_one.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1638861560525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638861572604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,10 @@\n+input = \"011110\"\n+\n+\n+def find_count_to_turn_out_to_all_zero_or_all_one(string):\n+    # 이 부분을 채워보세요!\n+    return 1\n+\n+\n+result = find_count_to_turn_out_to_all_zero_or_all_one(input)\n+print(result)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638872164745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,24 @@\n input = \"011110\"\n \n \n def find_count_to_turn_out_to_all_zero_or_all_one(string):\n-    # 이 부분을 채워보세요!\n-    return 1\n+    count_to_all_zero = 0\n+    count_to_all_one = 0\n \n+    if string[0] == '0':\n+        count_to_all_one += 1\n+    elif string[0] == '1':\n+        count_to_all_zero += 1\n \n+    for i in range(len(string) - 1):\n+        if string[i] != string[i + 1]:\n+            if string[i + 1] == '0':\n+                count_to_all_one += 1\n+            if string[i + 1] == '1':\n+                count_to_all_zero += 1\n+\n+    return min(count_to_all_one, count_to_all_zero)\n+\n+\n result = find_count_to_turn_out_to_all_zero_or_all_one(input)\n print(result)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638873313918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,17 @@\n input = \"011110\"\n \n \n def find_count_to_turn_out_to_all_zero_or_all_one(string):\n-    count_to_all_zero = 0\n-    count_to_all_one = 0\n+  count_all_zero = 0\n+  count_all_one = 0\n+  if string[0] == '1' :\n+    count_all_zero += 1\n+  if string[0] == '0' :\n+    count_all_one += 1\n+    \n+  for i in range(1,len(string) + 1) :\n+    if string[i] != \n \n-    if string[0] == '0':\n-        count_to_all_one += 1\n-    elif string[0] == '1':\n-        count_to_all_zero += 1\n \n-    for i in range(len(string) - 1):\n-        if string[i] != string[i + 1]:\n-            if string[i + 1] == '0':\n-                count_to_all_one += 1\n-            if string[i + 1] == '1':\n-                count_to_all_zero += 1\n-\n-    return min(count_to_all_one, count_to_all_zero)\n-\n-\n result = find_count_to_turn_out_to_all_zero_or_all_one(input)\n print(result)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638873440219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,15 @@\n   if string[0] == '0' :\n     count_all_one += 1\n     \n   for i in range(1,len(string) + 1) :\n-    if string[i] != \n+    if string[i] != string[i+1] :\n+      if string[i+1] == '0' :\n+        count_all_one += 1\n+      elif string[i+1] == '1' :\n+        count_all_zero += 1\n+  print(count_all_zero, count_all_one)\n+  return 1\n \n \n result = find_count_to_turn_out_to_all_zero_or_all_one(input)\n print(result)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638873497011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     count_all_zero += 1\n   if string[0] == '0' :\n     count_all_one += 1\n     \n-  for i in range(1,len(string) + 1) :\n+  for i in range(1,len(string) = 1) :\n     if string[i] != string[i+1] :\n       if string[i+1] == '0' :\n         count_all_one += 1\n       elif string[i+1] == '1' :\n"
                },
                {
                    "date": 1638873549562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     count_all_zero += 1\n   if string[0] == '0' :\n     count_all_one += 1\n     \n-  for i in range(1,len(string) = 1) :\n+  for i in range(len(string) - 1) :\n     if string[i] != string[i+1] :\n       if string[i+1] == '0' :\n         count_all_one += 1\n       elif string[i+1] == '1' :\n"
                },
                {
                    "date": 1638873567621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,9 @@\n       if string[i+1] == '0' :\n         count_all_one += 1\n       elif string[i+1] == '1' :\n         count_all_zero += 1\n-  print(count_all_zero, count_all_one)\n-  return 1\n+  return min(count_all_one, count_all_zero)\n \n \n result = find_count_to_turn_out_to_all_zero_or_all_one(input)\n print(result)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638873582563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,12 @@\n \n def find_count_to_turn_out_to_all_zero_or_all_one(string):\n   count_all_zero = 0\n   count_all_one = 0\n+  \n   if string[0] == '1' :\n     count_all_zero += 1\n-  if string[0] == '0' :\n+  elif string[0] == '0' :\n     count_all_one += 1\n     \n   for i in range(len(string) - 1) :\n     if string[i] != string[i+1] :\n"
                },
                {
                    "date": 1638873591096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,16 @@\n   count_all_one = 0\n   \n   if string[0] == '1' :\n     count_all_zero += 1\n-  elif string[0] == '0' :\n+  if string[0] == '0' :\n     count_all_one += 1\n     \n   for i in range(len(string) - 1) :\n     if string[i] != string[i+1] :\n       if string[i+1] == '0' :\n         count_all_one += 1\n-      elif string[i+1] == '1' :\n+      if string[i+1] == '1' :\n         count_all_zero += 1\n   return min(count_all_one, count_all_zero)\n \n \n"
                },
                {
                    "date": 1638873633013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,11 @@\n def find_count_to_turn_out_to_all_zero_or_all_one(string):\n   count_all_zero = 0\n   count_all_one = 0\n   \n-  if string[0] == '1' :\n-    count_all_zero += 1\n-  if string[0] == '0' :\n+  if string[0] == '1' : # 시작 문자가 1이면 0으로 바꾸는 카운터 1 증가\n+    count_all_zero += 1 \n+  if string[0] == '0' : # 시작 문자가 0이면 1로 바꾸는 카운터 1 증가\n     count_all_one += 1\n     \n   for i in range(len(string) - 1) :\n     if string[i] != string[i+1] :\n"
                },
                {
                    "date": 1638873839351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n   if string[0] == '0' : # 시작 문자가 0이면 1로 바꾸는 카운터 1 증가\n     count_all_one += 1\n     \n   for i in range(len(string) - 1) :\n+    print(i)\n     if string[i] != string[i+1] :\n       if string[i+1] == '0' :\n         count_all_one += 1\n       if string[i+1] == '1' :\n"
                },
                {
                    "date": 1638873975729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,9 @@\n   if string[0] == '0' : # 시작 문자가 0이면 1로 바꾸는 카운터 1 증가\n     count_all_one += 1\n     \n   for i in range(len(string) - 1) :\n-    print(i)\n-    if string[i] != string[i+1] :\n+    if string[i] != string[i+1] : \n       if string[i+1] == '0' :\n         count_all_one += 1\n       if string[i+1] == '1' :\n         count_all_zero += 1\n"
                }
            ],
            "date": 1638861560525,
            "name": "Commit-0",
            "content": ""
        }
    ]
}