{
    "sourceFile": "Python/week_1/더하기_사이클/더하기_사이클.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 75,
            "patches": [
                {
                    "date": 1639444257434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1639444266004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,4 +8,6 @@\n # 새로운 수는 26이다.\n # 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.\n # N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.\n \n+# 입력\n+# \n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444287331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,5 +9,7 @@\n # 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.\n # N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.\n \n # 입력\n-# \n\\ No newline at end of file\n+# 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.\n+# 0 <= N <= 99\n+\n"
                },
                {
                    "date": 1639444294274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,4 +12,6 @@\n # 입력\n # 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.\n # 0 <= N <= 99\n \n+# 출력 \n+# \n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444300602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,5 +13,5 @@\n # 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.\n # 0 <= N <= 99\n \n # 출력 \n-# \n\\ No newline at end of file\n+# 첫째 줄의 \n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444310887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,5 +13,5 @@\n # 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.\n # 0 <= N <= 99\n \n # 출력 \n-# 첫째 줄의 \n\\ No newline at end of file\n+# 첫째 줄에 N의 사이클 길이를 \n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444318224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,5 +13,6 @@\n # 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.\n # 0 <= N <= 99\n \n # 출력 \n-# 첫째 줄에 N의 사이클 길이를 \n\\ No newline at end of file\n+# 첫째 줄에 N의 사이클 길이를 출력한다.\n+\n"
                },
                {
                    "date": 1639444378764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,4 +15,8 @@\n \n # 출력 \n # 첫째 줄에 N의 사이클 길이를 출력한다.\n \n+n = input()\n+n = int(n)\n+\n+def plus_cycle\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444407833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,5 +18,8 @@\n \n n = input()\n n = int(n)\n \n-def plus_cycle\n\\ No newline at end of file\n+def plus_cycle(n) :\n+  return 1\n+\n+plus_cycle(n)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444441761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,5 +21,5 @@\n \n def plus_cycle(n) :\n   return 1\n \n-plus_cycle(n)\n\\ No newline at end of file\n+print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444484653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,9 @@\n n = input()\n n = int(n)\n \n def plus_cycle(n) :\n+  print(n[0])\n+  print(n[1])\n   return 1\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444498443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n n = input()\n n = int(n)\n \n def plus_cycle(n) :\n-  print(n[0])\n-  print(n[1])\n+  print(n[1:])\n+  print(n[:2])\n   return 1\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444509723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,8 @@\n # 출력 \n # 첫째 줄에 N의 사이클 길이를 출력한다.\n \n n = input()\n-n = int(n)\n \n def plus_cycle(n) :\n   print(n[1:])\n   print(n[:2])\n"
                },
                {
                    "date": 1639444521872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n n = input()\n \n def plus_cycle(n) :\n-  print(n[1:])\n-  print(n[:2])\n+  print(n[0])\n+  print(n[1])\n   return 1\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444570096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n n = input()\n \n def plus_cycle(n) :\n-  print(n[0])\n-  print(n[1])\n+ first_num =  int(n[0])\n+ last_num = int(n[1])\n   return 1\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444611695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n \n n = input()\n \n def plus_cycle(n) :\n- first_num =  int(n[0])\n- last_num = int(n[1])\n+  first_num =  int(n[0])\n+  last_num = int(n[1])\n+  print(first_num + last_num)\n   return 1\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444794774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,10 @@\n \n def plus_cycle(n) :\n   first_num =  int(n[0])\n   last_num = int(n[1])\n-  print(first_num + last_num)\n-  return 1\n+  sum_num = 0  \n+  while sum_num == n :\n+    sum_num = first_num + last_num\n+    print(sum_num)\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444821680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,7 +23,7 @@\n   last_num = int(n[1])\n   sum_num = 0  \n   while sum_num == n :\n     sum_num = first_num + last_num\n-    print(sum_num)\n+  print(sum_num)\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444843989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   first_num =  int(n[0])\n   last_num = int(n[1])\n   sum_num = 0  \n   while sum_num == n :\n+    print(n)\n     sum_num = first_num + last_num\n   print(sum_num)\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444857575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n def plus_cycle(n) :\n   first_num =  int(n[0])\n   last_num = int(n[1])\n   sum_num = 0  \n-  while sum_num == n :\n+  while 1 :\n     print(n)\n     sum_num = first_num + last_num\n   print(sum_num)\n \n"
                },
                {
                    "date": 1639444896513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,11 @@\n   first_num =  int(n[0])\n   last_num = int(n[1])\n   sum_num = 0  \n   while 1 :\n+    if sum_num == n :\n+      break\n     print(n)\n     sum_num = first_num + last_num\n-  print(sum_num)\n+  print(\"is sum\",sum_num)\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639444998873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,13 +20,13 @@\n \n def plus_cycle(n) :\n   first_num =  int(n[0])\n   last_num = int(n[1])\n-  sum_num = 0  \n-  while 1 :\n-    if sum_num == n :\n-      break\n-    print(n)\n+  sum_num = 0\n+  sum_num_count = 0  \n+  while sum_num == n :\n     sum_num = first_num + last_num\n+    sum_num_count += 1\n   print(\"is sum\",sum_num)\n+  return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639445038624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   first_num =  int(n[0])\n   last_num = int(n[1])\n   sum_num = 0\n   sum_num_count = 0  \n-  while sum_num == n :\n+  while sum_num == int(n) :\n     sum_num = first_num + last_num\n     sum_num_count += 1\n   print(\"is sum\",sum_num)\n   return sum_num_count\n"
                },
                {
                    "date": 1639445058739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,8 @@\n   sum_num_count = 0  \n   while sum_num == int(n) :\n     sum_num = first_num + last_num\n     sum_num_count += 1\n-  print(\"is sum\",sum_num)\n+    print(\"is sum\",sum_num)\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639445208282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n def plus_cycle(n) :\n   first_num =  int(n[0])\n   last_num = int(n[1])\n-  sum_num = 0\n+  sum_num = first_num + last_num\n   sum_num_count = 0  \n   while sum_num == int(n) :\n     sum_num = first_num + last_num\n     sum_num_count += 1\n"
                },
                {
                    "date": 1639445477238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,11 @@\n   last_num = int(n[1])\n   sum_num = first_num + last_num\n   sum_num_count = 0  \n   while sum_num == int(n) :\n+    sum_num = str(sum_num)\n+    first_num = int(sum_num[0])\n+    last_num = int(sum_num[1])\n     sum_num = first_num + last_num\n     sum_num_count += 1\n     print(\"is sum\",sum_num)\n   return sum_num_count\n"
                },
                {
                    "date": 1639445496397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   first_num =  int(n[0])\n   last_num = int(n[1])\n   sum_num = first_num + last_num\n   sum_num_count = 0  \n-  while sum_num == int(n) :\n+  while sum_num >= int(n) :\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n     last_num = int(sum_num[1])\n     sum_num = first_num + last_num\n"
                },
                {
                    "date": 1639445520023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   first_num =  int(n[0])\n   last_num = int(n[1])\n   sum_num = first_num + last_num\n   sum_num_count = 0  \n-  while sum_num >= int(n) :\n+  while sum_num == int(n) :\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n     last_num = int(sum_num[1])\n     sum_num = first_num + last_num\n"
                },
                {
                    "date": 1639445580024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n n = input()\n \n def plus_cycle(n) :\n-  first_num =  int(n[0])\n+  first_num =  int(n[0]) # 처\n   last_num = int(n[1])\n   sum_num = first_num + last_num\n   sum_num_count = 0  \n   while sum_num == int(n) :\n"
                },
                {
                    "date": 1639445760778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,9 @@\n \n n = input()\n \n def plus_cycle(n) :\n-  first_num =  int(n[0]) # 처\n-  last_num = int(n[1])\n-  sum_num = first_num + last_num\n+  sum_num = int(n[0]) + int(n[1]) \n   sum_num_count = 0  \n   while sum_num == int(n) :\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n"
                },
                {
                    "date": 1639445773321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n   sum_num_count = 0  \n-  while sum_num == int(n) :\n+  while sum_num == n :\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n     last_num = int(sum_num[1])\n     sum_num = first_num + last_num\n"
                },
                {
                    "date": 1639445780292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,7 +27,6 @@\n     last_num = int(sum_num[1])\n     sum_num = first_num + last_num\n     sum_num_count += 1\n     print(\"is sum\",sum_num)\n-  return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639445796255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,14 @@\n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n   sum_num_count = 0  \n   while sum_num == n :\n+    print(sum_num)\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n     last_num = int(sum_num[1])\n     sum_num = first_num + last_num\n     sum_num_count += 1\n     print(\"is sum\",sum_num)\n+  return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639445805096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n \n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n   sum_num_count = 0  \n+  print(sum_num)\n   while sum_num == n :\n-    print(sum_num)\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n     last_num = int(sum_num[1])\n     sum_num = first_num + last_num\n"
                },
                {
                    "date": 1639446090613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,11 @@\n n = input()\n \n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n+  new_num = n[1]\n   sum_num_count = 0  \n-  print(sum_num)\n+  print('01')\n   while sum_num == n :\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n     last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446113413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n n = input()\n \n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n-  new_num = n[1]\n+  # new_num = n[1]\n   sum_num_count = 0  \n   print('01')\n   while sum_num == n :\n     sum_num = str(sum_num)\n"
                },
                {
                    "date": 1639446119922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n n = input()\n \n def plus_cycle(n) :\n-  sum_num = int(n[0]) + int(n[1]) \n+  # sum_num = int(n[0]) + int(n[1]) \n   # new_num = n[1]\n   sum_num_count = 0  \n   print('01')\n   while sum_num == n :\n"
                },
                {
                    "date": 1639446125855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,8 @@\n def plus_cycle(n) :\n   # sum_num = int(n[0]) + int(n[1]) \n   # new_num = n[1]\n   sum_num_count = 0  \n-  print('01')\n   while sum_num == n :\n     sum_num = str(sum_num)\n     first_num = int(sum_num[0])\n     last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446162017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,17 +18,18 @@\n \n n = input()\n \n def plus_cycle(n) :\n-  # sum_num = int(n[0]) + int(n[1]) \n-  # new_num = n[1]\n+  sum_num = int(n[0]) + int(n[1]) \n+  new_num = n[1]\n   sum_num_count = 0  \n-  while sum_num == n :\n-    sum_num = str(sum_num)\n-    first_num = int(sum_num[0])\n-    last_num = int(sum_num[1])\n-    sum_num = first_num + last_num\n-    sum_num_count += 1\n-    print(\"is sum\",sum_num)\n-  return sum_num_count\n+  print('01')\n+  # while sum_num == n :\n+  #   sum_num = str(sum_num)\n+  #   first_num = int(sum_num[0])\n+  #   last_num = int(sum_num[1])\n+  #   sum_num = first_num + last_num\n+  #   sum_num_count += 1\n+  #   print(\"is sum\",sum_num)\n+  # return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639446176413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n-  print('01')\n+  print(int('01'))\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446191185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n-  print(int('01'))\n+  print('01' + 1)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446197464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n def plus_cycle(n) :\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n-  print('01' + 1)\n+  print('01' + '1')\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446283372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,14 @@\n \n n = input()\n \n def plus_cycle(n) :\n+  if n < 10 :\n+    n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n-  print('01' + '1')\n+  print(sum_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446301211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n n = input()\n \n def plus_cycle(n) :\n-  if n < 10 :\n+  if int(n) < 10 :\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n"
                },
                {
                    "date": 1639446325736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n-  print(sum_num)\n+  print(int(n[0]) , int(n[1], sum_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446348329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n-  print(int(n[0]) , int(n[1], sum_num)\n+  print(int(n[0]) , int(n[1], sum_num))\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446367779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   new_num = n[1]\n   sum_num_count = 0  \n-  print(int(n[0]) , int(n[1], sum_num))\n+  print(int(n[0]) , int(n[1]), sum_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446449801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n def plus_cycle(n) :\n   if int(n) < 10 :\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n-  new_num = n[1]\n+  new_num = n[-1] + sum_num[-1]\n   sum_num_count = 0  \n-  print(int(n[0]) , int(n[1]), sum_num)\n+  print(sum_num, new_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446468928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n def plus_cycle(n) :\n   if int(n) < 10 :\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n-  new_num = n[-1] + sum_num[-1]\n+  new_num = n[-1] + str(sum_num[-1])\n   sum_num_count = 0  \n   print(sum_num, new_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n"
                },
                {
                    "date": 1639446481780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n def plus_cycle(n) :\n   if int(n) < 10 :\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n-  new_num = n[-1] + str(sum_num[-1])\n+  new_num = n[-0] + sum_num[-0]\n   sum_num_count = 0  \n   print(sum_num, new_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n"
                },
                {
                    "date": 1639446502004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n def plus_cycle(n) :\n   if int(n) < 10 :\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n-  new_num = n[-0] + sum_num[-0]\n+  # new_num = n[-1] + sum_num[-1]\n   sum_num_count = 0  \n-  print(sum_num, new_num)\n+  print(sum_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446520912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   # new_num = n[-1] + sum_num[-1]\n   sum_num_count = 0  \n-  print(sum_num)\n+  print(str(sum_num) + '4')\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446527653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   # new_num = n[-1] + sum_num[-1]\n   sum_num_count = 0  \n-  print(str(sum_num) + '4')\n+  print(str(sum_num[-1]) + '4')\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446537236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n   # new_num = n[-1] + sum_num[-1]\n   sum_num_count = 0  \n-  print(str(sum_num[-1]) + '4')\n+  print(str(sum_num)[-1] + '4')\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639446576716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n def plus_cycle(n) :\n   if int(n) < 10 :\n     n = '0' + n\n   sum_num = int(n[0]) + int(n[1]) \n-  # new_num = n[-1] + sum_num[-1]\n+  new_num = n[-1] + str(sum_num)[-1]\n   sum_num_count = 0  \n-  print(str(sum_num)[-1] + '4')\n+  print(new_num)\n   # while sum_num == n :\n   #   sum_num = str(sum_num)\n   #   first_num = int(sum_num[0])\n   #   last_num = int(sum_num[1])\n"
                },
                {
                    "date": 1639447200805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,16 +20,19 @@\n \n def plus_cycle(n) :\n   if int(n) < 10 :\n     n = '0' + n\n-  sum_num = int(n[0]) + int(n[1]) \n-  new_num = n[-1] + str(sum_num)[-1]\n-  sum_num_count = 0  \n-  print(new_num)\n-  # while sum_num == n :\n+  sum_num = 0\n+  sum_num_count = 0 \n+  first_num = int(n[0])\n+  last_num = int(n[1])\n+  while sum_num == int(n) :\n+    sum_num = first_num + last_num # sum_num 은 int\n+    new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n+    print(new_num)\n   #   sum_num = str(sum_num)\n-  #   first_num = int(sum_num[0])\n-  #   last_num = int(sum_num[1])\n+  #   \n+  #   \n   #   sum_num = first_num + last_num\n   #   sum_num_count += 1\n   #   print(\"is sum\",sum_num)\n   # return sum_num_count\n"
                },
                {
                    "date": 1639447278643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   sum_num = 0\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n-  while sum_num == int(n) :\n+  while sum_num != int(n) :\n     sum_num = first_num + last_num # sum_num 은 int\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n     print(new_num)\n   #   sum_num = str(sum_num)\n"
                },
                {
                    "date": 1639447398346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,14 +27,11 @@\n   last_num = int(n[1])\n   while sum_num != int(n) :\n     sum_num = first_num + last_num # sum_num 은 int\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n-    print(new_num)\n-  #   sum_num = str(sum_num)\n-  #   \n-  #   \n-  #   sum_num = first_num + last_num\n-  #   sum_num_count += 1\n-  #   print(\"is sum\",sum_num)\n-  # return sum_num_count\n+    first_num = new_num[0]\n+    last_num = new_num[1]\n+    sum_num_count += 1\n+    print(\"is sum\",sum_num)\n+  return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639447406035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   sum_num = 0\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n-  while sum_num != int(n) :\n+  while sum_num == int(n) :\n     sum_num = first_num + last_num # sum_num 은 int\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n     first_num = new_num[0]\n     last_num = new_num[1]\n"
                },
                {
                    "date": 1639447466642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n   sum_num = 0\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n-  while sum_num == int(n) :\n+  while sum_num != int(n) :\n+    if sum_num == int(n):\n+      break\n     sum_num = first_num + last_num # sum_num 은 int\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n     first_num = new_num[0]\n     last_num = new_num[1]\n"
                },
                {
                    "date": 1639447618304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,11 @@\n \n # 출력 \n # 첫째 줄에 N의 사이클 길이를 출력한다.\n \n+# 2 + 2 = 4\n+# 24\n+\n n = input()\n \n def plus_cycle(n) :\n   if int(n) < 10 :\n@@ -27,13 +30,15 @@\n   last_num = int(n[1])\n   while sum_num != int(n) :\n     if sum_num == int(n):\n       break\n+    print(\"is sum\",sum_num)\n+    print(\"is first\",first_num)\n+    print(\"is last\",last_num)\n     sum_num = first_num + last_num # sum_num 은 int\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n     first_num = new_num[0]\n     last_num = new_num[1]\n     sum_num_count += 1\n-    print(\"is sum\",sum_num)\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639447658742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,14 +27,14 @@\n   sum_num = 0\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n+  print(\"is first\",first_num)\n+  print(\"is last\",last_num)\n   while sum_num != int(n) :\n     if sum_num == int(n):\n       break\n     print(\"is sum\",sum_num)\n-    print(\"is first\",first_num)\n-    print(\"is last\",last_num)\n     sum_num = first_num + last_num # sum_num 은 int\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n     first_num = new_num[0]\n     last_num = new_num[1]\n"
                },
                {
                    "date": 1639447678997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,16 +29,16 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   print(\"is first\",first_num)\n   print(\"is last\",last_num)\n-  while sum_num != int(n) :\n-    if sum_num == int(n):\n-      break\n-    print(\"is sum\",sum_num)\n-    sum_num = first_num + last_num # sum_num 은 int\n-    new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n-    first_num = new_num[0]\n-    last_num = new_num[1]\n-    sum_num_count += 1\n+  # while sum_num != int(n) :\n+  #   if sum_num == int(n):\n+  #     break\n+  #   print(\"is sum\",sum_num)\n+  #   sum_num = first_num + last_num # sum_num 은 int\n+  #   new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n+  #   first_num = new_num[0]\n+  #   last_num = new_num[1]\n+  #   sum_num_count += 1\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639448141772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,16 +29,18 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   print(\"is first\",first_num)\n   print(\"is last\",last_num)\n-  # while sum_num != int(n) :\n-  #   if sum_num == int(n):\n-  #     break\n-  #   print(\"is sum\",sum_num)\n-  #   sum_num = first_num + last_num # sum_num 은 int\n-  #   new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n-  #   first_num = new_num[0]\n-  #   last_num = new_num[1]\n-  #   sum_num_count += 1\n+  while sum_num != int(n) :\n+    if sum_num == int(n):\n+      break\n+    print(\"is sum\",sum_num)\n+    sum_num = first_num + last_num # sum_num 은 int \n+    # 2 + 4 = 6\n+    new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n+    # \"2\" + '4' = '24'\n+    first_num = int(new_num[0])\n+    last_num = int(new_num[-1])\n+    sum_num_count += 1\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639448158301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,11 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   print(\"is first\",first_num)\n   print(\"is last\",last_num)\n-  while sum_num != int(n) :\n-    if sum_num == int(n):\n-      break\n+  while sum_num == int(n) :\n+    # if sum_num == int(n):\n+    #   break\n     print(\"is sum\",sum_num)\n     sum_num = first_num + last_num # sum_num 은 int \n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n"
                },
                {
                    "date": 1639448175369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   print(\"is first\",first_num)\n   print(\"is last\",last_num)\n-  while sum_num == int(n) :\n+  while sum_num >= int(n) :\n     # if sum_num == int(n):\n     #   break\n     print(\"is sum\",sum_num)\n     sum_num = first_num + last_num # sum_num 은 int \n"
                },
                {
                    "date": 1639448180870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   print(\"is first\",first_num)\n   print(\"is last\",last_num)\n-  while sum_num >= int(n) :\n+  while sum_num <= int(n) :\n     # if sum_num == int(n):\n     #   break\n     print(\"is sum\",sum_num)\n     sum_num = first_num + last_num # sum_num 은 int \n"
                },
                {
                    "date": 1639448239787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,9 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   print(\"is first\",first_num)\n   print(\"is last\",last_num)\n-  while sum_num <= int(n) :\n-    # if sum_num == int(n):\n-    #   break\n+  while sum_num != int(n) :\n     print(\"is sum\",sum_num)\n     sum_num = first_num + last_num # sum_num 은 int \n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n"
                },
                {
                    "date": 1639448387002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   print(\"is first\",first_num)\n   print(\"is last\",last_num)\n-  while sum_num != int(n) :\n+  while sum_num_count < 5 :\n+  # while sum_num != int(n) :\n     print(\"is sum\",sum_num)\n     sum_num = first_num + last_num # sum_num 은 int \n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n"
                },
                {
                    "date": 1639448500639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,19 +27,20 @@\n   sum_num = 0\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n-  print(\"is first\",first_num)\n-  print(\"is last\",last_num)\n   while sum_num_count < 5 :\n   # while sum_num != int(n) :\n+    sum_num = first_num + last_num # sum_num 은 int \n     print(\"is sum\",sum_num)\n-    sum_num = first_num + last_num # sum_num 은 int \n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n+    print(\"is new\",new_num)\n     # \"2\" + '4' = '24'\n     first_num = int(new_num[0])\n+    print(\"is first\",first_num)\n     last_num = int(new_num[-1])\n+    print(\"is last\",last_num)\n     sum_num_count += 1\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639448666947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,10 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   while sum_num_count < 5 :\n   # while sum_num != int(n) :\n+    if new_num == int(n):\n+      break\n     sum_num = first_num + last_num # sum_num 은 int \n     print(\"is sum\",sum_num)\n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n"
                },
                {
                    "date": 1639448686189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,8 @@\n   first_num = int(n[0])\n   last_num = int(n[1])\n   while sum_num_count < 5 :\n   # while sum_num != int(n) :\n-    if new_num == int(n):\n-      break\n     sum_num = first_num + last_num # sum_num 은 int \n     print(\"is sum\",sum_num)\n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n@@ -42,7 +40,9 @@\n     print(\"is first\",first_num)\n     last_num = int(new_num[-1])\n     print(\"is last\",last_num)\n     sum_num_count += 1\n+    if new_num == int(n):\n+      break\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639448716077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     print(\"is first\",first_num)\n     last_num = int(new_num[-1])\n     print(\"is last\",last_num)\n     sum_num_count += 1\n-    if new_num == int(n):\n+    if new_num == n:\n       break\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639448732080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n   sum_num = 0\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n-  while sum_num_count < 5 :\n-  # while sum_num != int(n) :\n+  # while sum_num_count < 5 :\n+  while sum_num != int(n) :\n     sum_num = first_num + last_num # sum_num 은 int \n     print(\"is sum\",sum_num)\n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n"
                },
                {
                    "date": 1639448777896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,14 @@\n \n def plus_cycle(n) :\n   if int(n) < 10 :\n     n = '0' + n\n-  sum_num = 0\n+  new_num = '0'\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n   # while sum_num_count < 5 :\n-  while sum_num != int(n) :\n+  while new_num != n:\n     sum_num = first_num + last_num # sum_num 은 int \n     print(\"is sum\",sum_num)\n     # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n@@ -40,9 +40,9 @@\n     print(\"is first\",first_num)\n     last_num = int(new_num[-1])\n     print(\"is last\",last_num)\n     sum_num_count += 1\n-    if new_num == n:\n-      break\n+    # if new_num == n:\n+    #   break\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639448811206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,22 +27,13 @@\n   new_num = '0'\n   sum_num_count = 0 \n   first_num = int(n[0])\n   last_num = int(n[1])\n-  # while sum_num_count < 5 :\n   while new_num != n:\n     sum_num = first_num + last_num # sum_num 은 int \n-    print(\"is sum\",sum_num)\n-    # 2 + 4 = 6\n     new_num = str(last_num) + str(sum_num)[-1] # new_num 은 str\n-    print(\"is new\",new_num)\n-    # \"2\" + '4' = '24'\n     first_num = int(new_num[0])\n-    print(\"is first\",first_num)\n     last_num = int(new_num[-1])\n-    print(\"is last\",last_num)\n     sum_num_count += 1\n-    # if new_num == n:\n-    #   break\n   return sum_num_count\n \n print(plus_cycle(n))\n\\ No newline at end of file\n"
                }
            ],
            "date": 1639444257434,
            "name": "Commit-0",
            "content": "# 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. \n# 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. \n# 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.\n# 26부터 시작한다. 2+6 = 8이다. \n# 새로운 수는 68이다. 6+8 = 14이다. \n# 새로운 수는 84이다. 8+4 = 12이다. \n# 새로운 수는 42이다. 4+2 = 6이다. \n# 새로운 수는 26이다.\n# 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.\n# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.\n\n"
        }
    ]
}