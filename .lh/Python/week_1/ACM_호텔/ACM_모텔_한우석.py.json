{
    "sourceFile": "Python/week_1/ACM_호텔/ACM_모텔_한우석.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 44,
            "patches": [
                {
                    "date": 1638899374371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638899547079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n # 프로그램은 표준 입력에서 입력 데이터를 받는다. \n # 프로그램의 입력은 T 개의 테스트 데이터로 이루어져 있는데 T 는 입력의 맨 첫 줄에 주어진다. \n # 각 테스트 데이터는 한 행으로서 H, W, N, 세 정수를 포함하고 있으며 각각 호텔의 층 수, 각 층의 방 수, 몇 번째 손님인지를 나타낸다\n # (1 ≤ H, W ≤ 99, 1 ≤ N ≤ H × W).\n+# t 반복 횟수, h 층수,  방수,\n \n # 출력\n # 프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.\n \n"
                },
                {
                    "date": 1638899750026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n # 프로그램은 표준 입력에서 입력 데이터를 받는다. \n # 프로그램의 입력은 T 개의 테스트 데이터로 이루어져 있는데 T 는 입력의 맨 첫 줄에 주어진다. \n # 각 테스트 데이터는 한 행으로서 H, W, N, 세 정수를 포함하고 있으며 각각 호텔의 층 수, 각 층의 방 수, 몇 번째 손님인지를 나타낸다\n # (1 ≤ H, W ≤ 99, 1 ≤ N ≤ H × W).\n-# t 반복 횟수, h 층수,  방수,\n+# t 반복 횟수, h 층수, w 방수, n 몇 번째 손님\n \n # 출력\n # 프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.\n \n+\n"
                },
                {
                    "date": 1638899832887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,5 +16,8 @@\n \n # 출력\n # 프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.\n \n+t = input()\n \n+for num in range(t) :\n+  \n"
                },
                {
                    "date": 1638900235022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,6 @@\n \n t = input()\n \n for num in range(t) :\n+  h,w,n = map(int,input().split())\n   \n"
                },
                {
                    "date": 1638900410081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,5 @@\n t = input()\n \n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  \n+  foloer\n"
                },
                {
                    "date": 1638900440555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,5 @@\n t = input()\n \n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  foloer\n+  floor = \n"
                },
                {
                    "date": 1638900465913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,8 @@\n # 출력\n # 프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.\n \n t = input()\n-\n+#  h 층수, w 방수, n 몇 번째 손님\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   floor = \n"
                },
                {
                    "date": 1638900580970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,7 +18,11 @@\n # 프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.\n \n t = input()\n #  h 층수, w 방수, n 몇 번째 손님\n+# 2\n+# 6 12 10\n+# \n+# 30 50 72\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   floor = \n"
                },
                {
                    "date": 1638900588363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n t = input()\n #  h 층수, w 방수, n 몇 번째 손님\n # 2\n # 6 12 10\n+# 402\n+# 30 50 72\n # \n-# 30 50 72\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   floor = \n"
                },
                {
                    "date": 1638900721375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,14 @@\n \n t = input()\n #  h 층수, w 방수, n 몇 번째 손님\n # 2\n+\n # 6 12 10\n # 402\n+\n # 30 50 72\n-# \n+# 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  floor = \n+  floor = n%6\n+  room_num = \n"
                },
                {
                    "date": 1638901762109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,6 +27,7 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  floor = n%6\n-  room_num = \n+  floor = n%h\n+  room_num = n//h + 1\n+  print (floor + room)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638901823738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n # 출력\n # 프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.\n \n t = input()\n+t = int(t)\n #  h 층수, w 방수, n 몇 번째 손님\n # 2\n \n # 6 12 10\n"
                },
                {
                    "date": 1638902724868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,5 +30,5 @@\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   floor = n%h\n   room_num = n//h + 1\n-  print (floor + room)\n\\ No newline at end of file\n+  print (f\"{floor}{room}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638902756414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,5 +30,5 @@\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   floor = n%h\n   room_num = n//h + 1\n-  print (f\"{floor}{room}\")\n\\ No newline at end of file\n+  print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638902893578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,9 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  floor = n%h\n+  if n%h < 10 :\n+    floor = f'0{n%h}'\n+    \n   room_num = n//h + 1\n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638902911222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,7 +30,9 @@\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   if n%h < 10 :\n     floor = f'0{n%h}'\n+  else :\n+    floor = n%h\n     \n   room_num = n//h + 1\n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638902943067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,7 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  if n%h < 10 :\n-    floor = f'0{n%h}'\n-  else :\n-    floor = n%h\n-    \n+  floor = n%h\n   room_num = n//h + 1\n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638903010309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,6 +29,10 @@\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   floor = n%h\n-  room_num = n//h + 1\n+  if n//h+1 < 10 :\n+    room_num = f'0{n//h + 1}'\n+  else :\n+    room_num = n//h + 1\n+    \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638904193291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  floor = n%h\n+  floor = n%h+1\n   if n//h+1 < 10 :\n     room_num = f'0{n//h + 1}'\n   else :\n     room_num = n//h + 1\n"
                },
                {
                    "date": 1638904368295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,10 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  floor = n%h+1\n-  if n//h+1 < 10 :\n+  floor = n%h\n+  if (n//h)+1 < 10 :\n     room_num = f'0{n//h + 1}'\n   else :\n     room_num = n//h + 1\n     \n"
                },
                {
                    "date": 1638904599519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n+  if n - h > 0 \n   floor = n%h\n   if (n//h)+1 < 10 :\n     room_num = f'0{n//h + 1}'\n   else :\n"
                },
                {
                    "date": 1638904679308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,12 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  if n - h > 0 \n-  floor = n%h\n+  if n - h >= 0: \n+    floor = n\n+  else : \n+    floor = n%h\n   if (n//h)+1 < 10 :\n     room_num = f'0{n//h + 1}'\n   else :\n     room_num = n//h + 1\n"
                },
                {
                    "date": 1638904708362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  if n - h >= 0: \n+  if n - h <= 0: \n     floor = n\n   else : \n     floor = n%h\n   if (n//h)+1 < 10 :\n"
                },
                {
                    "date": 1638904949148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,10 @@\n   if n - h <= 0: \n     floor = n\n   else : \n     floor = n%h\n-  if (n//h)+1 < 10 :\n+  if (n//h) < 10 :\n     room_num = f'0{n//h + 1}'\n   else :\n-    room_num = n//h + 1\n+    room_num = n//h\n     \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638904970954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    room_num = f'0{n//h + 1}'\n+    room_num = f'0{n//h}'\n   else :\n     room_num = n//h\n     \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638905203959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    room_num = f'0{n//h}'\n+    room_num = f'0{n//h+1}'\n   else :\n-    room_num = n//h\n+    room_num = n//h+1\n     \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638905391267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,15 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    room_num = f'0{n//h+1}'\n+    if n//h == 1 :\n+      room_num = f'0{n//h-1}'\n+    else :\n+      room_num = f'0{n//h+1}'\n   else :\n-    room_num = n//h+1\n+    if n//h == 1 :\n+      room_num = n//h-1\n+    else :\n+      room_num = n//h+1\n     \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638905961250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,14 +34,14 @@\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n     if n//h == 1 :\n-      room_num = f'0{n//h-1}'\n+      room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n     if n//h == 1 :\n-      room_num = n//h-1\n+      room_num = n//h\n     else :\n       room_num = n//h+1\n     \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638906824306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   h,w,n = map(int,input().split())\n   if n - h <= 0: \n     floor = n\n   else : \n-    floor = n%h\n+    floor = n%h+1\n   if (n//h) < 10 :\n     if n//h == 1 :\n       room_num = f'0{n//h}'\n     else :\n"
                },
                {
                    "date": 1638907529632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   h,w,n = map(int,input().split())\n   if n - h <= 0: \n     floor = n\n   else : \n-    floor = n%h+1\n+    floor = n%h\n   if (n//h) < 10 :\n     if n//h == 1 :\n       room_num = f'0{n//h}'\n     else :\n"
                },
                {
                    "date": 1638908222963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h == 1 :\n+    if n//h < 1 :\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h == 1 :\n+    if n//h < 1 :\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908298383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 :\n+    if n//h <= 1 :\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 :\n+    if n//h <= 1 :\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908481524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h <= 1 :\n+    if n//h < 1 :\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h <= 1 :\n+    if n//h < 1 :\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908527977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 :\n+    if n//h < 1 and n//h != 1:\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 :\n+    if n//h < 1 and n//h != 1:\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908548961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 and n//h != 1:\n+    if n//h < 1 or n//h != 1:\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 and n//h != 1:\n+    if n//h < 1 or n//h != 1:\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908627455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 or n//h != 1:\n+    if n//h < 1 or n//h == 1:\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 or n//h != 1:\n+    if n//h < 1 or n//h == 1:\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908643795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 or n//h == 1:\n+    if n//h < 1 and n//h == 1:\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 or n//h == 1:\n+    if n//h < 1 and n//h == 1:\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908649038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 and n//h == 1:\n+    if n//h < 1 and n/h == 1:\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 and n//h == 1:\n+    if n//h < 1 and n/h == 1:\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638908663568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 and n/h == 1:\n+    if n//h < 1 or n/h == 1:\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 and n/h == 1:\n+    if n//h < 1 or n/h == 1:\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638909118306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,14 @@\n     floor = n\n   else : \n     floor = n%h\n   if (n//h) < 10 :\n-    if n//h < 1 or n/h == 1:\n+    if n//h > 1 or n/h == 1:\n       room_num = f'0{n//h}'\n     else :\n       room_num = f'0{n//h+1}'\n   else :\n-    if n//h < 1 or n/h == 1:\n+    if n//h > 1 or n/h == 1:\n       room_num = n//h\n     else :\n       room_num = n//h+1\n     \n"
                },
                {
                    "date": 1638909242203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,20 +28,7 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  if n - h <= 0: \n-    floor = n\n-  else : \n-    floor = n%h\n-  if (n//h) < 10 :\n-    if n//h > 1 or n/h == 1:\n-      room_num = f'0{n//h}'\n-    else :\n-      room_num = f'0{n//h+1}'\n-  else :\n-    if n//h > 1 or n/h == 1:\n-      room_num = n//h\n-    else :\n-      room_num = n//h+1\n+  \n     \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638909259648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,12 @@\n # 30 50 72\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n-  \n+  num = n//h + 1\n+    floor = n % h\n+    if n % h == 0:  # h의 배수이면,\n+        num = n//h\n+        floor = h\n+    print(f'{floor*100+num}')\n     \n   print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638909269266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,10 @@\n # 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   num = n//h + 1\n-    floor = n % h\n-    if n % h == 0:  # h의 배수이면,\n-        num = n//h\n-        floor = h\n-    print(f'{floor*100+num}')\n-    \n-  print (f\"{floor}{room_num}\")\n\\ No newline at end of file\n+  floor = n % h\n+  if n % h == 0:  # h의 배수이면,\n+      num = n//h\n+      floor = h\n+  print(f'{floor*100+num}')\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1638909368040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,8 @@\n \n t = input()\n t = int(t)\n #  h 층수, w 방수, n 몇 번째 손님\n-# 2\n-\n-# 6 12 10\n-# 402\n-\n-# 30 50 72\n-# 1203\n for num in range(t) :\n   h,w,n = map(int,input().split())\n   num = n//h + 1\n   floor = n % h\n"
                }
            ],
            "date": 1638899374371,
            "name": "Commit-0",
            "content": "# 방 번호는 YXX 나 YYXX 형태인데 여기서 Y 나 YY 는 층 수를 나타내고 XX 는 엘리베이터에서부터 세었을 때의 번호를 나타낸다. \n# 즉, 그림 1 에서 빗금으로 표시한 방은 305 호가 된다.\n# 손님은 엘리베이터를 타고 이동하는 거리는 신경 쓰지 않는다. \n# 다만 걷는 거리가 같을 때에는 아래층의 방을 더 선호한다. 예를 들면 102 호 방보다는 301 호 방을 더 선호하는데, \n# 102 호는 거리 2 만큼 걸어야 하지만 301 호는 거리 1 만큼만 걸으면 되기 때문이다. 같은 이유로 102 호보다 2101 호를 더 선호한다.\n# 여러분이 작성할 프로그램은 초기에 모든 방이 비어있다고 가정하에 이 정책에 따라 N 번째로 도착한 손님에게 배정될 방 번호를 계산하는 프로그램이다. \n# 첫 번째 손님은 101 호, 두 번째 손님은 201 호 등과 같이 배정한다. \n# 그림 1 의 경우를 예로 들면, H = 6이므로 10 번째 손님은 402 호에 배정해야 한다.\n\n# 입력\n# 프로그램은 표준 입력에서 입력 데이터를 받는다. \n# 프로그램의 입력은 T 개의 테스트 데이터로 이루어져 있는데 T 는 입력의 맨 첫 줄에 주어진다. \n# 각 테스트 데이터는 한 행으로서 H, W, N, 세 정수를 포함하고 있으며 각각 호텔의 층 수, 각 층의 방 수, 몇 번째 손님인지를 나타낸다\n# (1 ≤ H, W ≤ 99, 1 ≤ N ≤ H × W).\n\n# 출력\n# 프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데, 내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.\n\n"
        }
    ]
}