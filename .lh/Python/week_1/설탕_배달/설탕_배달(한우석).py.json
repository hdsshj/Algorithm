{
    "sourceFile": "Python/week_1/설탕_배달/설탕_배달(한우석).py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1638874735520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638874749758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,4 +4,5 @@\n # 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, \n # 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.\n # 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.\n \n+# 입력 : N\n"
                },
                {
                    "date": 1638874767969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,4 +5,6 @@\n # 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.\n # 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.\n \n # 입력 : N\n+# 출력 : 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.\n+\n"
                },
                {
                    "date": 1638874904664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,4 +7,11 @@\n \n # 입력 : N\n # 출력 : 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.\n \n+# 입력 N 을 5로 나누고 나머지를 3으로 나눈다\n+\n+\n+N = input()\n+\n+N = int(N)\n+\n"
                },
                {
                    "date": 1638877338831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,4 +14,5 @@\n N = input()\n \n N = int(N)\n \n+def \n\\ No newline at end of file\n"
                },
                {
                    "date": 1638877394320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,6 @@\n N = input()\n \n N = int(N)\n \n-def \n\\ No newline at end of file\n+if N % 5 != 0 :\n+  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1638878143241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,6 +14,6 @@\n N = input()\n \n N = int(N)\n \n-if N % 5 != 0 :\n+if N / 5 :\n   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1638878447028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,6 +14,12 @@\n N = input()\n \n N = int(N)\n \n-if N / 5 :\n-  \n\\ No newline at end of file\n+count_five_kg = 0\n+count_three_kg = 0\n+\n+if N%5 < 0 :\n+  if N%3 < 0 :\n+    return -1\n+  else:\n+    count_three_kg = N/3\n"
                },
                {
                    "date": 1638878489635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n count_five_kg = 0\n count_three_kg = 0\n \n-if N%5 < 0 :\n-  if N%3 < 0 :\n+if N/5 < 0 :\n+  if N/3 < 0 :\n     return -1\n   else:\n     count_three_kg = N/3\n"
                },
                {
                    "date": 1638878753720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,6 +20,4 @@\n \n if N/5 < 0 :\n   if N/3 < 0 :\n     return -1\n-  else:\n-    count_three_kg = N/3\n"
                },
                {
                    "date": 1638878802649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,7 @@\n count_three_kg = 0\n \n if N/5 < 0 :\n   if N/3 < 0 :\n-    return -1\n+    print(-1)\n+  else:\n+    count_three_kg = N/3\n"
                },
                {
                    "date": 1638878909464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,4 +22,5 @@\n   if N/3 < 0 :\n     print(-1)\n   else:\n     count_three_kg = N/3\n+    print(count_three_kg)\n"
                },
                {
                    "date": 1638879018963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,13 +14,16 @@\n N = input()\n \n N = int(N)\n \n-count_five_kg = 0\n-count_three_kg = 0\n+def count_suger (number) :\n+  count_five_kg = 0\n+  count_three_kg = 0\n \n-if N/5 < 0 :\n-  if N/3 < 0 :\n-    print(-1)\n-  else:\n-    count_three_kg = N/3\n-    print(count_three_kg)\n+  if N/5 < 0 :\n+    if N/3 < 0 :\n+      print(-1)\n+    else:\n+      count_three_kg = N/3\n+      print(count_three_kg)\n+\n+print(count_suger(N))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638879054081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,5 +25,5 @@\n     else:\n       count_three_kg = N/3\n       print(count_three_kg)\n \n-print(count_suger(N))\n\\ No newline at end of file\n+print('dddd')\n\\ No newline at end of file\n"
                }
            ],
            "date": 1638874735520,
            "name": "Commit-0",
            "content": "# 상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. \n# 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.\n# 상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. \n# 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, \n# 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.\n# 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.\n\n"
        }
    ]
}